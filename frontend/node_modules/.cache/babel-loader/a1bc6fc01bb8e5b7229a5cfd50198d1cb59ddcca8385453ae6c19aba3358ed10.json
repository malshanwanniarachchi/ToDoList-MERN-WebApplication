{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\PDF Downloader App\\\\PDF Downloader\\\\frontend\\\\src\\\\component\\\\pdf\\\\PdfList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport \"./style.css\";\nimport NavBar from '../navBar/NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PdfList = () => {\n  _s();\n  const [pdfs, setPdfs] = useState([]);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    const fetchPdfs = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/pdf');\n        setPdfs(response.data.pdf);\n      } catch (error) {\n        setMessage('Failed to fetch PDFs');\n      }\n    };\n    fetchPdfs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"pdfListContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"PDF List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"errorMessage\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"pdfList\",\n        children: pdfs.map(pdf => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `http://localhost:8000/api/pdf/${pdf._id}`,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: pdf.Name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, pdf._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(PdfList, \"jxlxml2DYq9hIFNrj0de7Zjwu9c=\");\n_c = PdfList;\nexport default PdfList;\nvar _c;\n$RefreshReg$(_c, \"PdfList\");","map":{"version":3,"names":["React","useEffect","useState","axios","NavBar","jsxDEV","_jsxDEV","PdfList","_s","pdfs","setPdfs","message","setMessage","fetchPdfs","response","get","data","pdf","error","children","fileName","_jsxFileName","lineNumber","columnNumber","id","map","href","_id","target","rel","Name","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/PDF Downloader App/PDF Downloader/frontend/src/component/pdf/PdfList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport \"./style.css\"\r\nimport NavBar from '../navBar/NavBar';\r\n\r\nconst PdfList = () => {\r\n  const [pdfs, setPdfs] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchPdfs = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:8000/api/pdf');\r\n        setPdfs(response.data.pdf);\r\n      } catch (error) {\r\n        setMessage('Failed to fetch PDFs');\r\n      }\r\n    };\r\n\r\n    fetchPdfs();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <NavBar/>\r\n    <div id=\"pdfListContainer\"> \r\n      <h2>PDF List</h2>\r\n      {message && <p id=\"errorMessage\">{message}</p>} \r\n      <ul id=\"pdfList\">\r\n        {pdfs.map((pdf) => (\r\n          <li key={pdf._id}>\r\n            <a href={`http://localhost:8000/api/pdf/${pdf._id}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {pdf.Name}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PdfList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,OAAOC,MAAM,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,+BAA+B,CAAC;QACjEL,OAAO,CAACI,QAAQ,CAACE,IAAI,CAACC,GAAG,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdN,UAAU,CAAC,sBAAsB,CAAC;MACpC;IACF,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAa,QAAA,gBACEb,OAAA,CAACF,MAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACXjB,OAAA;MAAKkB,EAAE,EAAC,kBAAkB;MAAAL,QAAA,gBACxBb,OAAA;QAAAa,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAChBZ,OAAO,iBAAIL,OAAA;QAAGkB,EAAE,EAAC,cAAc;QAAAL,QAAA,EAAER;MAAO;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9CjB,OAAA;QAAIkB,EAAE,EAAC,SAAS;QAAAL,QAAA,EACbV,IAAI,CAACgB,GAAG,CAAER,GAAG,iBACZX,OAAA;UAAAa,QAAA,eACEb,OAAA;YAAGoB,IAAI,EAAE,iCAAiCT,GAAG,CAACU,GAAG,EAAG;YAACC,MAAM,EAAC,QAAQ;YAACC,GAAG,EAAC,qBAAqB;YAAAV,QAAA,EAC3FF,GAAG,CAACa;UAAI;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR;QAAC,GAHGN,GAAG,CAACU,GAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIZ,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAACf,EAAA,CAnCID,OAAO;AAAAwB,EAAA,GAAPxB,OAAO;AAqCb,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}